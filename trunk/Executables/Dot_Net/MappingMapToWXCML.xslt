<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2009sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:n2="http://gcml.org" xmlns:n="http://workflowxcml.model" xmlns:xmi="http://www.omg.org/XMI" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="n2 xmi xs xsi xsl" xmlns="http://workflowxcml.model">
	<xsl:namespace-alias stylesheet-prefix="n" result-prefix="#default"/>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<n:Workflow>
			<xsl:attribute name="xsi:schemaLocation">
				<xsl:value-of select="'http://workflowxcml.model E:/Grammars/2009_04_19/WXCML.xsd'"/>
			</xsl:attribute>
			<xsl:variable name="var1_instance" select="."/>
			<xsl:for-each select="$var1_instance/n2:Gcml">
				<xsl:for-each select="boundary">
					<xsl:variable name="var4_boundary" select="."/>
					<n:Boundary>
						<xsl:attribute name="activityID">
							<xsl:value-of select="string(@ActivityID)"/>
						</xsl:attribute>
						<xsl:if test="$var4_boundary/@xmi:label">
							<xsl:attribute name="Name">
								<xsl:value-of select="string(@xmi:label)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:attribute name="Type">
							<xsl:value-of select="string(@Type)"/>
						</xsl:attribute>
						<xsl:if test="$var4_boundary/@BoundaryToCall">
							<xsl:attribute name="ToActivity">
								<xsl:value-of select="string(@BoundaryToCall)"/>
							</xsl:attribute>
						</xsl:if>
					</n:Boundary>
				</xsl:for-each>
				<xsl:for-each select="call">
					<xsl:variable name="var6_call" select="."/>
					<n:Call>
						<xsl:attribute name="activityID">
							<xsl:value-of select="string(@ActivityID)"/>
						</xsl:attribute>
						<xsl:if test="$var6_call/@CallToConnection">
							<xsl:attribute name="CallToConnection">
								<xsl:value-of select="string(@CallToConnection)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var6_call/@CallToDecision">
							<xsl:attribute name="CallToDecision">
								<xsl:value-of select="string(@CallToDecision)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var6_call/@CallToBoundary">
							<xsl:attribute name="CallToBoundary">
								<xsl:value-of select="string(@CallToBoundary)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:for-each select="CallToConnection">
							<xsl:variable name="var8_CallToConnection" select="."/>
							<n:CallToConnection>
								<xsl:attribute name="bandwidth">
									<xsl:value-of select="string(@bandwidth)"/>
								</xsl:attribute>
								<xsl:if test="$var8_CallToConnection/@fromDevice">
									<xsl:attribute name="fromDevice">
										<xsl:value-of select="string(@fromDevice)"/>
									</xsl:attribute>
								</xsl:if>
							</n:CallToConnection>
						</xsl:for-each>
						<xsl:for-each select="CallToDecision">
							<xsl:variable name="var10_CallToDecision" select="."/>
							<n:CallToDecision>
								<xsl:if test="$var10_CallToDecision/@sourceActivityID">
									<xsl:attribute name="sourceActivityID">
										<xsl:value-of select="string(@sourceActivityID)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var10_CallToDecision/@successPathID">
									<xsl:attribute name="successPathID">
										<xsl:value-of select="string(@successPathID)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var10_CallToDecision/@failPathID">
									<xsl:attribute name="failPathID">
										<xsl:value-of select="string(@failPathID)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var10_CallToDecision/@DecisionToCall">
									<xsl:attribute name="DecisionToCall">
										<xsl:value-of select="string(@DecisionToCall)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var10_CallToDecision/@DecisionToBoundary">
									<xsl:attribute name="DecisionToBoundary">
										<xsl:value-of select="string(@DecisionToBoundary)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:for-each select="DecisionToCall">
									<xsl:variable name="var12_DecisionToCall" select="."/>
									<n:DecisionToCall>
										<xsl:if test="$var12_DecisionToCall/@CallToConnection">
											<xsl:attribute name="CallToConnection">
												<xsl:value-of select="string(@CallToConnection)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="$var12_DecisionToCall/@CallToDecision">
											<xsl:attribute name="CallToDecision">
												<xsl:value-of select="string(@CallToDecision)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="$var12_DecisionToCall/@CallToBoundary">
											<xsl:attribute name="CallToBoundary">
												<xsl:value-of select="string(@CallToBoundary)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:for-each select="CallToConnection">
											<xsl:variable name="var14_CallToConnection" select="."/>
											<n:CallToConnection>
												<xsl:attribute name="bandwidth">
													<xsl:value-of select="string(@bandwidth)"/>
												</xsl:attribute>
												<xsl:if test="$var14_CallToConnection/@fromDevice">
													<xsl:attribute name="fromDevice">
														<xsl:value-of select="string(@fromDevice)"/>
													</xsl:attribute>
												</xsl:if>
											</n:CallToConnection>
										</xsl:for-each>
										<xsl:for-each select="CallToDecision">
											<n:CallToDecision/>
										</xsl:for-each>
										<xsl:for-each select="CallToBoundary">
											<n:CallToBoundary>
												<xsl:attribute name="Type">
													<xsl:value-of select="string(@Type)"/>
												</xsl:attribute>
											</n:CallToBoundary>
										</xsl:for-each>
									</n:DecisionToCall>
								</xsl:for-each>
								<xsl:for-each select="DecisionToBoundary">
									<n:DecisionToBoundary>
										<xsl:attribute name="Type">
											<xsl:value-of select="string(@Type)"/>
										</xsl:attribute>
									</n:DecisionToBoundary>
								</xsl:for-each>
							</n:CallToDecision>
						</xsl:for-each>
						<xsl:for-each select="CallToBoundary">
							<n:CallToBoundary>
								<xsl:attribute name="Type">
									<xsl:value-of select="string(@Type)"/>
								</xsl:attribute>
							</n:CallToBoundary>
						</xsl:for-each>
					</n:Call>
				</xsl:for-each>
				<xsl:for-each select="decision">
					<xsl:variable name="var24_decision" select="."/>
					<n:Decision>
						<xsl:attribute name="activityID">
							<xsl:value-of select="string(@ActivityID)"/>
						</xsl:attribute>
						<xsl:if test="$var24_decision/@sourceActivityID">
							<xsl:attribute name="sourceActivityID">
								<xsl:value-of select="string(@sourceActivityID)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var24_decision/@successPathID">
							<xsl:attribute name="successPathID">
								<xsl:value-of select="string(@successPathID)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var24_decision/@failPathID">
							<xsl:attribute name="failPathID">
								<xsl:value-of select="string(@failPathID)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var24_decision/@DecisionToCall">
							<xsl:attribute name="DecisionToCall">
								<xsl:value-of select="string(@DecisionToCall)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var24_decision/@DecisionToBoundary">
							<xsl:attribute name="DecisionToBoundary">
								<xsl:value-of select="string(@DecisionToBoundary)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:for-each select="DecisionToCall">
							<xsl:variable name="var26_DecisionToCall" select="."/>
							<n:DecisionToCall>
								<xsl:if test="$var26_DecisionToCall/@CallToConnection">
									<xsl:attribute name="CallToConnection">
										<xsl:value-of select="string(@CallToConnection)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var26_DecisionToCall/@CallToDecision">
									<xsl:attribute name="CallToDecision">
										<xsl:value-of select="string(@CallToDecision)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var26_DecisionToCall/@CallToBoundary">
									<xsl:attribute name="CallToBoundary">
										<xsl:value-of select="string(@CallToBoundary)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:for-each select="CallToConnection">
									<xsl:variable name="var28_CallToConnection" select="."/>
									<n:CallToConnection>
										<xsl:attribute name="bandwidth">
											<xsl:value-of select="string(@bandwidth)"/>
										</xsl:attribute>
										<xsl:if test="$var28_CallToConnection/@fromDevice">
											<xsl:attribute name="fromDevice">
												<xsl:value-of select="string(@fromDevice)"/>
											</xsl:attribute>
										</xsl:if>
									</n:CallToConnection>
								</xsl:for-each>
								<xsl:for-each select="CallToDecision">
									<xsl:variable name="var30_CallToDecision" select="."/>
									<n:CallToDecision>
										<xsl:if test="$var30_CallToDecision/@sourceActivityID">
											<xsl:attribute name="sourceActivityID">
												<xsl:value-of select="string(@sourceActivityID)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="$var30_CallToDecision/@successPathID">
											<xsl:attribute name="successPathID">
												<xsl:value-of select="string(@successPathID)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="$var30_CallToDecision/@failPathID">
											<xsl:attribute name="failPathID">
												<xsl:value-of select="string(@failPathID)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="$var30_CallToDecision/@DecisionToCall">
											<xsl:attribute name="DecisionToCall">
												<xsl:value-of select="string(@DecisionToCall)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="$var30_CallToDecision/@DecisionToBoundary">
											<xsl:attribute name="DecisionToBoundary">
												<xsl:value-of select="string(@DecisionToBoundary)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:for-each select="DecisionToCall">
											<n:DecisionToCall/>
										</xsl:for-each>
										<xsl:for-each select="DecisionToBoundary">
											<n:DecisionToBoundary>
												<xsl:attribute name="Type">
													<xsl:value-of select="string(@Type)"/>
												</xsl:attribute>
											</n:DecisionToBoundary>
										</xsl:for-each>
									</n:CallToDecision>
								</xsl:for-each>
								<xsl:for-each select="CallToBoundary">
									<n:CallToBoundary>
										<xsl:attribute name="Type">
											<xsl:value-of select="string(@Type)"/>
										</xsl:attribute>
									</n:CallToBoundary>
								</xsl:for-each>
							</n:DecisionToCall>
						</xsl:for-each>
						<xsl:for-each select="DecisionToBoundary">
							<n:DecisionToBoundary>
								<xsl:attribute name="Type">
									<xsl:value-of select="string(@Type)"/>
								</xsl:attribute>
							</n:DecisionToBoundary>
						</xsl:for-each>
					</n:Decision>
				</xsl:for-each>
				<xsl:for-each select="connection">
					<xsl:variable name="var40_connection" select="."/>
					<n:Connection>
						<xsl:attribute name="bandwidth">
							<xsl:value-of select="string(@bandwidth)"/>
						</xsl:attribute>
						<xsl:if test="$var40_connection/@fromDevice">
							<xsl:attribute name="fromDevice">
								<xsl:value-of select="string(@fromDevice)"/>
							</xsl:attribute>
						</xsl:if>
					</n:Connection>
				</xsl:for-each>
				<xsl:for-each select="form">
					<xsl:variable name="var42_form" select="."/>
					<n:Form>
						<xsl:if test="$var42_form/@action">
							<xsl:attribute name="action">
								<xsl:value-of select="string(@action)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:attribute name="formName">
							<xsl:value-of select="string(@formTypeName)"/>
						</xsl:attribute>
						<xsl:if test="$var42_form/@suggestedApplication">
							<xsl:attribute name="suggestedApplication">
								<xsl:value-of select="string(@suggestedApplication)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var42_form/@voiceCommand">
							<xsl:attribute name="voiceCommand">
								<xsl:value-of select="string(@voiceCommand)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var42_form/@toConnection">
							<xsl:attribute name="toConnection">
								<xsl:value-of select="string(@toConnection)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var42_form/@toParentForm">
							<xsl:attribute name="toParentForm">
								<xsl:value-of select="string(@toParentForm)"/>
							</xsl:attribute>
						</xsl:if>
					</n:Form>
				</xsl:for-each>
				<xsl:for-each select="device">
					<xsl:variable name="var44_device" select="."/>
					<n:Device>
						<xsl:if test="$var44_device/@isLocal">
							<xsl:attribute name="isLocal">
								<xsl:value-of select="((('0' != string(@isLocal)) and ('false' != string(@isLocal))) and boolean(string(@isLocal)))"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var44_device/@isVirtual">
							<xsl:attribute name="isVirtual">
								<xsl:value-of select="((('0' != string(@isVirtual)) and ('false' != string(@isVirtual))) and boolean(string(@isVirtual)))"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var44_device/@toConnection">
							<xsl:attribute name="toConnection">
								<xsl:value-of select="string(@toConnection)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var44_device/@fromIsAttached">
							<xsl:attribute name="fromIsAttached">
								<xsl:value-of select="string(@fromIsAttached)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:attribute name="DeviceID">
							<xsl:value-of select="string(@deviceID)"/>
						</xsl:attribute>
						<xsl:for-each select="deviceCapability">
							<n:deviceCapability>
								<xsl:value-of select="string(.)"/>
							</n:deviceCapability>
						</xsl:for-each>
					</n:Device>
				</xsl:for-each>
				<xsl:for-each select="person">
					<xsl:variable name="var48_person" select="."/>
					<n:Person>
						<xsl:attribute name="personID">
							<xsl:value-of select="string(@personID)"/>
						</xsl:attribute>
						<xsl:attribute name="personName">
							<xsl:value-of select="string(@personName)"/>
						</xsl:attribute>
						<xsl:attribute name="personRole">
							<xsl:value-of select="string(@personRole)"/>
						</xsl:attribute>
						<xsl:if test="$var48_person/@toIsAttached">
							<xsl:attribute name="toIsAttached">
								<xsl:value-of select="string(@toIsAttached)"/>
							</xsl:attribute>
						</xsl:if>
					</n:Person>
				</xsl:for-each>
				<xsl:for-each select="isAttached">
					<xsl:variable name="var50_isAttached" select="."/>
					<n:IsAttached>
						<xsl:if test="$var50_isAttached/@toDevice">
							<xsl:attribute name="toDevice">
								<xsl:value-of select="string(@toDevice)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var50_isAttached/@fromPerson">
							<xsl:attribute name="fromPerson">
								<xsl:value-of select="string(@fromPerson)"/>
							</xsl:attribute>
						</xsl:if>
					</n:IsAttached>
				</xsl:for-each>
				<xsl:for-each select="medium">
					<xsl:variable name="var52_medium" select="."/>
					<n:Medium>
						<xsl:if test="$var52_medium/@derivedFromBuiltInType">
							<xsl:attribute name="mediumDataType">
								<xsl:value-of select="string(@derivedFromBuiltInType)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:attribute name="mediumName">
							<xsl:value-of select="string(@mediumTypeName)"/>
						</xsl:attribute>
						<xsl:if test="$var52_medium/@suggestedApplication">
							<xsl:attribute name="suggestedApplication">
								<xsl:value-of select="string(@suggestedApplication)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var52_medium/@voiceCommand">
							<xsl:attribute name="voiceCommand">
								<xsl:value-of select="string(@voiceCommand)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:if test="$var52_medium/@toConnection">
							<xsl:attribute name="toConnection">
								<xsl:value-of select="string(@toConnection)"/>
							</xsl:attribute>
						</xsl:if>
					</n:Medium>
				</xsl:for-each>
			</xsl:for-each>
		</n:Workflow>
	</xsl:template>
</xsl:stylesheet>
