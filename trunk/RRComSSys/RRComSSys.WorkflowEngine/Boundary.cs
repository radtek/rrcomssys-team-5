//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Design Document
//  @ File Name : Boundary.cs
//  @ Date : 4/19/2009
//  @ Author : 
//
//

using System;
using RRComSSys.TransformationEngine;

namespace RRComSSys.WorkflowEngine
{
    public class Boundary :  WFElement
    {
        private TransformationEngine.Boundary myActivity=null;

        public Boundary( TransformationEngine.Boundary obj, Workflow wfInstance)
        {
            myActivity = obj;
            ConnectToNextActivity(wfInstance);
        }

        private void ConnectToNextActivity(Workflow wfInstance)
        {
            if (myActivity.ToActivity != null)
            {
                if (myActivity.Type.Equals(BoundaryType.Start))
                {
                    string activityID =
                        wfInstance.Call[WorkflowFactory.IndexOfActivity(myActivity.ToActivity)].activityID;
                    DefaultNextActivityID = activityID;
                }
                
            }
  
        }

        #region Overrides of WFElement


        public override bool ProcessActivity()
        {
            return true; // For now....just step through the workflow
        }

        /// <summary>
        /// Gets the activity ID.
        /// </summary>
        /// <returns></returns>
        public override string GetActivityID()
        {
            return myActivity.activityID;
        }

        
        public override string NextActivityID()
        {
            return DefaultNextActivityID;
        }
        

        public override Type TypeOfActivity()
        {
            return typeof (Boundary);
        }

        public bool Starts()
        {
            return myActivity.Type.Equals(BoundaryType.Start);
        }

        public bool Ends()
        {
            return !Starts();
        }
        #endregion
    }

}
